{"version":3,"sources":["Components/Presentation/Project/Project.tsx","Components/Container/Projects/Projects.tsx","Components/Presentation/Footer/Footer.tsx","Components/Presentation/Header/Header.tsx","Components/Presentation/Jumbotron/Jumbotron.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["Project","props","actionHref","actionOnClick","actionText","className","logoAlt","logoHref","showHorizontalRule","subtext","title","titleHref","react_default","a","createElement","react","concat","Link","href","target","PrimaryButton","text","onClick","Image","src","process","alt","maximizeFrame","imageFit","ImageFit","contain","Projects","this","projects","Array","from","map","p","i","Presentation_Project_Project","Object","assign","key","id","length","Component","Footer","state","isHovering","_this2","_this$props","githubUsername","rightText","classNames","splice","push","ColorClassNames","themeDarkerBackground","join","neutralLight","white","rel","style","textDecoration","textDecorationLine","onMouseEnter","setState","onMouseLeave","color","NeutralColors","Header","siteTitle","document","backgroundImage","Jumbotron","header","imageHref","imageAlt","backgroundColor","gray10","width","FontClassNames","superLarge","fontWeight","FontWeights","semilight","xLarge","light","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","emails","split","v","atob","index","Math","round","random","footerText","gravatarHref","md5","headerSubtext","_this$state","Presentation_Header_Header","window","location","hostname","Presentation_Jumbotron_Jumbotron","Container_Projects_Projects","Presentation_Footer_Footer","Boolean","match","loadTheme","palette","black","neutralDark","neutralLighter","neutralLighterAlt","neutralPrimary","neutralPrimaryAlt","neutralQuaternary","neutralQuaternaryAlt","neutralSecondary","neutralTertiary","neutralTertiaryAlt","themeDark","themeDarkAlt","themeDarker","themeLight","themeLighter","themeLighterAlt","themePrimary","themeSecondary","themeTertiary","ReactDOM","render","Fabric","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.446a70be.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport {\n    Image,\n    ImageFit,\n    Link,\n    PrimaryButton,\n } from \"office-ui-fabric-react\";\n\nimport IProject from \"../../../Interfaces/IProject\";\n\nimport \"./Project.scss\";\n\ninterface IProjectProps extends IProject {\n    className?: string;\n    showHorizontalRule: boolean;\n}\n\nconst Project = (props: IProjectProps) => {\n    const {\n        actionHref,\n        actionOnClick,\n        actionText,\n        className,\n        logoAlt,\n        logoHref,\n        showHorizontalRule,\n        subtext,\n        title,\n        titleHref,\n    } = props;\n\n    return (\n        <Fragment>\n            <div className={`${className ? `${className} ` : \"\"}d-flex project-container`}>\n                <div className=\"flex-fill project-text d-flex flex-column\">\n                    { titleHref ? (\n                        <Link className=\"mt-3 ms-font-xxl title\" href={titleHref} target=\"_blank\">{title}</Link>\n                    ) : (\n                        <div className=\"mt-3 ms-font-xxl title\">{title}</div>\n                    )}\n                    {subtext && <div className=\"mt-1 mb-auto ms-font-l subtext\">{subtext}</div>}\n                    {actionText && (\n                        <div className=\"mt-3 mx-auto\">\n                            <PrimaryButton text={actionText} href={actionHref} target=\"_blank\" onClick={actionOnClick} />\n                        </div>\n                    )}\n                </div>\n                <div className=\"project-logo flex-shrink-0\">\n                    <Image src={logoHref || process.env.REACT_APP_LOGO_HREF} alt={logoAlt || title} maximizeFrame imageFit={ImageFit.contain}  />\n                </div>\n            </div>\n            {showHorizontalRule && <hr className=\"w-100\" />}\n        </Fragment>\n    );\n};\n\nProject.propTypes = {\n    actionHref: PropTypes.string,\n    actionOnClick: PropTypes.func,\n    actionText: PropTypes.string,\n    className: PropTypes.string,\n    id: PropTypes.number.isRequired,\n    logoAlt: PropTypes.string,\n    logoHref: PropTypes.string,\n    showHorizontalRule: PropTypes.bool,\n    subtext: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    titleHref: PropTypes.string,\n};\n\nexport default Project;\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport Project from \"../../Presentation/Project/Project\";\n\nimport IProject from \"../../../Interfaces/IProject\";\n\nimport \"./Projects.scss\";\n\n\ninterface IProjectsProps {\n    projects: IProject[];\n    className?: string;\n}\n\nclass Projects extends Component<IProjectsProps> {\n    public static propTypes = {\n        className: PropTypes.string,\n        projects: PropTypes.arrayOf(\n            PropTypes.shape({\n                actionHref: PropTypes.string,\n                actionOnClick: PropTypes.func,\n                actionText: PropTypes.string,\n                id: PropTypes.number.isRequired,\n                logoAlt: PropTypes.string,\n                logoHref: PropTypes.string,\n                subtext: PropTypes.string,\n                title: PropTypes.string.isRequired,\n                titleHref: PropTypes.string,\n            }),\n        ).isRequired,\n    };\n\n    public render() {\n        const { className } = this.props;\n        let { projects } = this.props;\n        projects = Array.from(projects);\n        return (\n            <div className={`${className ? `${className} ` : \"\"}Projects m-0 mx-sm-5 d-flex flex-column`}>\n                {projects.map((p, i, a) => (\n                    <Project\n                        {...p}\n                        key={`project-${p.id}`}\n                        showHorizontalRule={i !== a.length - 1}\n                        className=\"mb-3 ms-slideRightIn40\"\n                    />\n                ))}\n            </div>\n        );\n    }\n}\n\nexport default Projects;\n","import React, { Component } from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { NeutralColors } from \"@uifabric/fluent-theme/lib/fluent\";\r\nimport { ColorClassNames } from \"office-ui-fabric-react\";\r\n\r\nimport \"./Footer.scss\";\r\n\r\n\r\ninterface IFooterProps {\r\n    githubUsername?: string;\r\n    rightText: string;\r\n    className?: string;\r\n}\r\n\r\ninterface IFooterState {\r\n    isHovering: boolean;\r\n}\r\n\r\nclass Footer extends Component<IFooterProps, IFooterState> {\r\n    public static propTypes = {\r\n        className: PropTypes.string,\r\n        githubUsername: PropTypes.string,\r\n        rightText: PropTypes.string.isRequired,\r\n    };\r\n\r\n    public state = {\r\n        isHovering: false,\r\n    };\r\n\r\n    public render() {\r\n        const { githubUsername, rightText, className } = this.props;\r\n        const { isHovering } = this.state;\r\n        const classNames: string[] = [];\r\n\r\n        if (className != null) { classNames.splice(0, 0, className); }\r\n        classNames.push(\"d-flex\", githubUsername != null ? \"justify-content-between\" : \"justify-content-end\", \"align-items-center\", ColorClassNames.themeDarkerBackground);\r\n\r\n        return (\r\n            <footer className={classNames.join(\" \")}>\r\n                { githubUsername && (\r\n                    <a\r\n                        href={`//github.com/${githubUsername}`}\r\n                        className={`github-footer-link ml-3 ms-fontWeight-light d-flex align-items-center ${isHovering ? ColorClassNames.neutralLight : ColorClassNames.white}`}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        style={{ textDecoration: \"none\", textDecorationLine: \"none\" }}\r\n                        onMouseEnter={() => this.setState({ isHovering: true })}\r\n                        onMouseLeave={() => this.setState({ isHovering: false })}\r\n                    >\r\n                        <i className=\"fab fa-github ms-fontSize-xl\"></i>\r\n                        <span className=\"ml-2\">{githubUsername}</span>\r\n                    </a>\r\n                ) }\r\n                <div className=\"mr-3 ms-fontWeight-light\" style={{ color: NeutralColors.white }}>{rightText}</div>\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { ColorClassNames } from \"office-ui-fabric-react\";\r\n\r\nimport \"./Header.scss\";\r\n\r\n\r\ninterface IHeaderProps {\r\n    siteTitle: string;\r\n    className: string;\r\n}\r\n\r\ninterface IHeaderState {\r\n    isHovering: boolean;\r\n}\r\n\r\nclass Header extends Component<IHeaderProps, IHeaderState> {\r\n    public static propTypes = {\r\n        className: PropTypes.string,\r\n        siteTitle: PropTypes.string.isRequired,\r\n    };\r\n\r\n    public state = {\r\n        isHovering: false,\r\n    };\r\n\r\n    public render() {\r\n        const { siteTitle, className } = this.props;\r\n        const { isHovering } = this.state;\r\n        const classNames: string[] = [];\r\n\r\n        if (className != null) { classNames.splice(0, 0, className); }\r\n        classNames.push(\"d-flex\", \"align-items-center\", ColorClassNames.themeDarkerBackground);\r\n\r\n        document.title = `Welcome to ${siteTitle}!`;\r\n        return (\r\n            <header className={classNames.join(\" \")}>\r\n                <a\r\n                    href=\"/\"\r\n                    className={`d-flex align-items-center ml-3 ${isHovering ? ColorClassNames.neutralLight : ColorClassNames.white}`}\r\n                    style={{ textDecoration: \"none\", textDecorationLine: \"none\" }}\r\n                    onMouseEnter={() => this.setState({ isHovering: true })}\r\n                    onMouseLeave={() => this.setState({ isHovering: false })}\r\n                >\r\n                    <div className=\"logo\" style={{ backgroundImage: `url(\"${process.env.REACT_APP_LOGO_HREF}\")` }} />\r\n                    <div className=\"ml-1 ms-font-xl\">{siteTitle}</div>\r\n                </a>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport { NeutralColors } from \"@uifabric/fluent-theme/lib/fluent\";\nimport {\n    FontClassNames,\n    FontWeights,\n    Image,\n    ImageFit,\n} from \"office-ui-fabric-react\";\n\nimport \"./Jumbotron.scss\";\n\ninterface IJumbotronProps {\n    header: string;\n    subtext: string;\n    imageHref: string;\n    imageAlt: string;\n}\n\nconst Jumbotron = (props: IJumbotronProps) => {\n    const { header, subtext, imageHref, imageAlt } = props;\n    return (\n        <div className=\"pv-3 ms-borderBox jumbotron\" style={{ backgroundColor: NeutralColors.gray10 }}>\n            <div className=\"d-flex container\">\n                {imageHref && (\n                    <Image\n                        src={imageHref}\n                        alt={imageAlt}\n                        imageFit={ImageFit.contain}\n                        maximizeFrame\n                        width=\"12rem\"\n                        className=\"flex-shrink-0 flex-grow-0 rounded ms-hiddenMdDown\"\n                    />\n                )}\n                <div className=\"text-container flex-fill my-auto ml-3\">\n                    <div className={`${FontClassNames.superLarge} jumbotron-header`} style={{ fontWeight: FontWeights.semilight as any }}>{header}</div>\n                    <div className={`${FontClassNames.xLarge} jumbotron-subtext`} style={{ fontWeight: FontWeights.light as any }}>\n                        {subtext}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nJumbotron.propTypes = {\n    header: PropTypes.string.isRequired,\n    subtext: PropTypes.string,\n};\n\nexport default Jumbotron;\n","import md5 from \"md5\";\nimport React, { Component } from \"react\";\n\nimport IProject from \"./Interfaces/IProject\";\n\nimport Projects from \"./Components/Container/Projects/Projects\";\nimport Footer from \"./Components/Presentation/Footer/Footer\";\nimport Header from \"./Components/Presentation/Header/Header\";\nimport Jumbotron from \"./Components/Presentation/Jumbotron/Jumbotron\";\n\nimport projects from \"./projects.json\";\n\ninterface IAppState {\n    header: string;\n    headerSubtext: string;\n    footerText: string;\n    emails: string[];\n    gravatarHref: string;\n}\n\nclass App extends Component<any, IAppState> {\n    constructor(props: any) {\n        super(props);\n\n        const emails: string[] = (process.env.REACT_APP_GRAVATAR_EMAILS || \"\").split(\";\").map((v) => atob(v));\n\n        const index: number = Math.round(Math.random() * (emails.length - 1));\n        this.state = {\n            emails,\n            footerText: \"Built in 2018 by Martin Tracey\",\n            gravatarHref: `//gravatar.com/avatar/${md5(emails[index])}?s=600`,\n            header: \"Welcome!\",\n            headerSubtext: \"This site showcases my work. Please take the time to look around and feel free to reach out if you're interested in working with me!\",\n        };\n    }\n\n    public render() {\n        const {\n            gravatarHref,\n            header,\n            headerSubtext,\n            footerText,\n        } = this.state;\n\n        return (\n            <div className=\"App d-flex flex-column\">\n                <Header className=\"flex-shrink-0\" siteTitle={window.location.hostname} />\n                <div className=\"flex-fill d-flex flex-column content oy-auto\">\n                    <Jumbotron\n                        header={header}\n                        subtext={headerSubtext}\n                        imageHref={gravatarHref}\n                        imageAlt=\"Gravatar\"\n                    />\n                    <div className=\"container\">\n                        <Projects projects={projects as IProject[]} />\n                    </div>\n                </div>\n                <Footer\n                    className=\"flex-shrink-0\"\n                    githubUsername={process.env.REACT_APP_GITHUB_USERNAME}\n                    rightText={footerText}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","/* eslint-disable no-console */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nconst registerValidSW = (swUrl, config) => {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === \"installed\") {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                \"New content is available and will be used when all \" +\r\n                                \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log(\"Content is cached for offline use.\");\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch((error) => {\r\n            console.error(\"Error during service worker registration:\", error);\r\n        });\r\n};\r\n\r\nconst checkValidServiceWorker = (swUrl, config) => {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get(\"content-type\");\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                \"No internet connection found. App is running in offline mode.\"\r\n            );\r\n        });\r\n};\r\n\r\nexport const register = (config) => {\r\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener(\"load\", () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\"This web app is being served cache-first by a service worker. To learn more, visit http://bit.ly/CRA-PWA\");\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nexport const unregister = () => {\r\n    if (\"serviceWorker\" in navigator) {\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nimport { Fabric, loadTheme } from \"office-ui-fabric-react\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"normalize.css/normalize.css\";\n\nimport \"@fortawesome/fontawesome-free/scss/brands.scss\";\nimport \"@fortawesome/fontawesome-free/scss/fontawesome.scss\";\nimport \"@fortawesome/fontawesome-free/scss/regular.scss\";\nimport \"@fortawesome/fontawesome-free/scss/solid.scss\";\nimport \"bootstrap/scss/bootstrap-grid.scss\";\nimport \"office-ui-fabric-react/dist/sass/Fabric.scss\";\n\nconst themes = {\n    blue: {\n        palette: {\n            black: \"#262626\",\n            neutralDark: \"#343434\",\n            neutralLight: \"#eaeaea\",\n            neutralLighter: \"#f4f4f4\",\n            neutralLighterAlt: \"#f8f8f8\",\n            neutralPrimary: \"#444444\",\n            neutralPrimaryAlt: \"#5b5b5b\",\n            neutralQuaternary: \"#d0d0d0\",\n            neutralQuaternaryAlt: \"#dadada\",\n            neutralSecondary: \"#8f8f8f\",\n            neutralTertiary: \"#c7c7c7\",\n            neutralTertiaryAlt: \"#c8c8c8\",\n            themeDark: \"#0046a6\",\n            themeDarkAlt: \"#0053c5\",\n            themeDarker: \"#00347a\",\n            themeLight: \"#abcaf4\",\n            themeLighter: \"#d1e2f9\",\n            themeLighterAlt: \"#f3f8fe\",\n            themePrimary: \"#005cdb\",\n            themeSecondary: \"#1b6ddf\",\n            themeTertiary: \"#5d98e9\",\n            white: \"#ffffff\",\n        },\n    },\n    red: {\n        palette: {\n            black: \"#262626\",\n            neutralDark: \"#343434\",\n            neutralLight: \"#eaeaea\",\n            neutralLighter: \"#f4f4f4\",\n            neutralLighterAlt: \"#f8f8f8\",\n            neutralPrimary: \"#444444\",\n            neutralPrimaryAlt: \"#5b5b5b\",\n            neutralQuaternary: \"#d0d0d0\",\n            neutralQuaternaryAlt: \"#dadada\",\n            neutralSecondary: \"#8f8f8f\",\n            neutralTertiary: \"#c7c7c7\",\n            neutralTertiaryAlt: \"#c8c8c8\",\n            themeDark: \"#a60003\",\n            themeDarkAlt: \"#c50003\",\n            themeDarker: \"#7a0002\",\n            themeLight: \"#f4abac\",\n            themeLighter: \"#f9d1d2\",\n            themeLighterAlt: \"#fef3f4\",\n            themePrimary: \"#db0004\",\n            themeSecondary: \"#df1b1e\",\n            themeTertiary: \"#e95d60\",\n            white: \"#ffffff\",\n        },\n    },\n};\n\nloadTheme(themes.blue);\n\nReactDOM.render(<Fabric><App /></Fabric>, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}